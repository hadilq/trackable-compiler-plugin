import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
  repositories {
    google()
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "com.vanniktech:gradle-maven-publish-plugin:${maven_publish_plugin_version}"
    classpath "com.android.tools.build:gradle:3.5.3"
    classpath "com.github.hadilq.trackable:trackable-compiler-plugin-gradle"
    classpath "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:${gradle_intellij_plugin_version}"
  }
}

String resolvedJvmTarget = System.getenv().getOrDefault("ci_java_version", "1.8")
allprojects {
  pluginManager.withPlugin("org.jetbrains.kotlin.jvm") {
    project.tasks.withType(KotlinCompile).configureEach {
      kotlinOptions {
        jvmTarget = resolvedJvmTarget
        freeCompilerArgs += ['-progressive']
      }
    }
  }

  repositories {
    google()
    mavenCentral()
    jcenter()
  }
}

subprojects {
  configurations.all {
    resolutionStrategy {
      dependencySubstitution {
        // The Kotlin plugin will try to add the trackable-compiler-plugin to dependencies with a version
        // We have it local to this project, so we want it to just substitute that with the local project
        // Not needed for external consumers
        substitute module('com.github.hadilq.trackable:trackable-compiler-plugin') with project(':trackable-compiler-plugin')

        // The Gradle plugin will add the annotations artifact to dependencies if a custom annotation isn't defined.
        // Not needed for external consumers
        substitute module('com.github.hadilq.trackable:trackable-compiler-plugin-annotations') with project(':trackable-compiler-plugin-annotations')

        substitute module('com.github.hadilq.trackable:trackable-gradle-intellij-plugin') with project(':trackable-gradle-intellij-plugin')
      }
    }
  }
}
